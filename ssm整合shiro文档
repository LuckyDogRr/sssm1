<!--spring相关-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>4.3.2.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>4.3.2.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>4.3.2.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
      <version>4.3.2.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>4.3.2.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>4.3.2.RELEASE</version>
    </dependency>

<!--springMVC-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>4.3.2.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>4.3.2.RELEASE</version>
    </dependency>

<!--jsp相关-->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>

<!--mybatis-->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>3.4.6</version>
    </dependency>

    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>1.3.2</version>
    </dependency>

<!--数据库相关-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.47</version>
    </dependency>

    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.0.29</version>
    </dependency>

<!--aop相关-->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>1.8.13</version>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.8.13</version>
    </dependency>

<!--shiro相关依赖-->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-web</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-ehcache</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-spring</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-quartz</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.3</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.8.1</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.16.18</version>
    </dependency>

   <plugins>
       <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
           <artifactId>tomcat7-maven-plugin</artifactId>
           <configuration>
               <port>8080</port>
               <path>/</path>
           </configuration>
   </plugin>
*******************************************************************************************************

web.xml
<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5"
     
    xmlns="http://java.sun.com/xml/ns/javaee"
    
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
<!--spring-->
  
	<context-param>
    
		<param-name>contextConfigLocation</param-name>
   
 		<param-value>classpath:spring/applicationContext-*.xml</param-value>
 
 	</context-param>

  
	<listener>
   
 		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
 
 	</listener>

  
<!--springmvc-->
  
	<servlet>
   
 		<servlet-name>DispatcherServlet</servlet-name>
  
  		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  
  	    <init-param>
     
 		<param-name>contextConfigLocation</param-name>
  
    		<param-value>classpath:spring/springmvc.xml</param-value>
 
            </init-param>
    
		<load-on-startup>1</load-on-startup>
 
 	</servlet>

 
	    <servlet-mapping>
  
  		<servlet-name>DispatcherServlet</servlet-name>
  
  		<url-pattern>/</url-pattern>
 
            </servlet-mapping>



<!--乱码过滤器-->


  <!--只能解决post请求乱码-->
 
 	<filter>
   
		<filter-name>CharacterEncodingFilter</filter-name>
  
  		<filter-class>net.wanho.filter.CharacterEncodingFilter</filter-class>
   
 <!--指定一个具体的字符集-->
  
 	 <init-param>
   
   		<param-name>encoding</param-name>
  
   		<param-value>UTF-8</param-value>
   
 	</init-param>
 
   <!--forceEncoding用来设置是否理会 request.setCharacterEncoding方法，true代表强制覆盖之前的编码格式-->
  
  	<init-param>
   
   		<param-name>forceEncoding</param-name>
  
   	 	<param-value>true</param-value>
 
   	</init-param>
 
 	</filter>

 
 	<filter-mapping>
  
  		<filter-name>CharacterEncodingFilter</filter-name>
   
 		<url-pattern>/*</url-pattern>

  	</filter-mapping>

  <!--shiroFilter-->
 
 	<filter>
  
 		 <filter-name>shiroFilter</filter-name>
 
   		 <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  
  	   <init-param>
     
 		<param-name>targetFilterLifecycle</param-name>
   
   		<param-value>true</param-value>
  
  	   </init-param>
 
       	</filter>

 
   	<filter-mapping>
    
		<filter-name>shiroFilter</filter-name>
   
		 <url-pattern>/*</url-pattern>
 
	</filter-mapping>
*******************************************************************************************************
applicationContext-shiro

    <!--缓存管理器-->
    <!--当前电脑或者服务器的缓存  不推荐使用-->
    <!--<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>-->

    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <!--<property name="cacheManagerConfigFile" value="classpath:"-->
    </bean>

    <!--凭证匹配器-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <!--采用加密方式-->
        <property name="hashAlgorithmName" value="md5"/>
        <!--加密次数  盐值-->
        <property name="hashIterations" value="2"/>
    </bean>


    <!--Realm-->
    <bean id="realm" class="net.wanho.realm.MyRealm">
        <!--是否开启-->
        <property name="cachingEnabled" value="true"/>
        <!--凭证匹配器-->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <!--记住我cookie-->
    <bean id="cookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="ShiroRememberMe"/>
        <!--以秒为单位  24*5*3600-->
        <property name="maxAge" value="432000"/>
    </bean>

    <!--记住我管理器-->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="cookie"/>
    </bean>


    <!--安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--自定义realm-->
        <property name="realm" ref="realm"/>
        <!--缓存管理器-->
        <property name="cacheManager" ref="cacheManager"/>
        <!--记住我管理器-->
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <!--securityUtils.setSecurityManager(securityManager)-->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!--shiro的web过滤器-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!--系统中没有用户时跳转登录页面-->
        <property name="loginUrl" value="/login/toLogin"/>
        <!--<property name="unauthorizedUrl" value="/error.html"/>-->
        <property name="filterChainDefinitions">
            <value>
                <!--配置url的拦截级别-->
                <!--匿名可用-->
                /js/**=anon
                /login/**=anon
                /guest/**=anon
                <!--登录可用-->
                /vip/**=authc
                <!--指定角色可用-->
                /admin/**=roles["admin"]
                <!--指定权限可用-->
                /order/**=perms["order:*"]
                <!--必须存在用户，登录操作不做检查-->
                /**=user

            </value>
        </property>
    </bean>
*******************************************************************************************************
applicationContext-trans

 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--事务-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 传播行为 -->
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="create*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* net.wanho.service.*.*(..))"/>
    </aop:config>

*******************************************************************************************************
applicationContext-service
    <!--扫描service接口-->
    <context:component-scan base-package="net.wanho.service"/>
*******************************************************************************************************
applicationContext-dao


    <!--配置数据库相关-->

    <!--读取配置文件-->
    <context:property-placeholder location="classpath:resource/db.properties"/>

    <!--数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--mybatis相关-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--mapper扫包-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="net.wanho.mapper"/>
    </bean>
*******************************************************************************************************
springmvc

    <!--扫包-->
    <context:component-scan base-package="net.wanho.controller"/>
    <!--适配器 映射器-->
    <mvc:annotation-driven/>
    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <mvc:default-servlet-handler/>


    <!--启用权限注解-->
    <aop:config proxy-target-class="true"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
**************************************************************************************************
SqlMapConfig

 <!--开启运行参数-->
    <!--二级缓存
        延迟加载
    -->
    <settings>
        <!--二级缓存-->
        <setting name="cacheEnabled" value="true"/>
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="true"/>
    </settings>


    <!--类型的别名-->
    <typeAliases>
        <package name="net.wanho.pojo"/>
    </typeAliases>

    <!--5.0以下版本-->
    <!--<plugins>
        <plugin interceptor="com.github.pagehelper.PageHelper">
            <property name="dialect" value="mysql"/>
        </plugin>
    </plugins>-->

    <!--分页插件  5.0及以上版本-->
    <!--<plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor"></plugin>
    </plugins>-->
***************************************************************************************
